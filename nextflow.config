//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    /* feature flags
    * The workflow will have similar features to the wf-human-variation:
    * 1) Short variants,
    * 2) Structural variants,
    * 3) Modified base calling,
    */
    sv = false
    mod = false
    snv = false

    // common
    bam_normal = null
    bam_tumor = null
    sample_name = "SAMPLE"
    ref = null
    bed = null
    tr_bed = null
    annotation = true
    out_dir = "output"
    ubam_map_threads = 8
    ubam_sort_threads = 3
    ubam_bam2fq_threads = 1

    // QC metrics
    tumor_min_coverage = 20
    normal_min_coverage = 20
    depth_window_size = 50000
    depth_intervals = false

    // ClairS parameters
    override_basecaller_cfg = null
    // ClairS parameters
    normal_vcf = null
    hybrid_mode_vcf = null
    genotyping_mode_vcf = null
    skip_haplotype_filter = false
    haplotype_filter_threads = 4
    ctg_name = "EMPTY"
    include_all_ctgs = false
    snv_min_af = 0.05
    indel_min_af = 0.05 // This will be set to 1.00 if the model is not a dna_r10 one.
    min_contig_size = 0
    min_qual = 8
    min_cov = 4
    min_bq = null
    use_longphase = true
    use_longphase_intermediate = true
    use_normal_hets_for_phasing = true
    use_tumor_hets_for_phasing = false
    use_het_indels_for_phasing = true
    use_longphase_haplotag = true
    liquid_tumor = false
    print_ref_calls = false
    print_germline_calls = false
    germline = true
    phase_normal = false
    clairs_debug = false
    fast_mode = false
    // Clair3 parameters
    clair3_base_err = 0.001
    clair3_gq_bin_size = 5
    clair3_phase_vcf = false
    clair3_ref_pct_full = 0.1
    clair3_var_pct_full = 0.7
    clair3_min_mq = 5
    GVCF = false
    vcf_fn = "EMPTY"
    // clairs-to settings
    clairs_to_qual = 12
    clairs_to_min_bq = 20
    qual_cutoff_phaseable_region = 14
    qual_cutoff_unphaseable_region = 20

    // severus caller options
    severus_threads = 8
    min_sv_length = 50
    min_support = 3
    vaf_threshold = null
    severus_args = null

    // modkit
    force_strand = false
    modkit_args = null
    diff_mod = true
    dss_threads = 1
    modkit_threads = 4

    // Generic options
    help = false
    version = false
    aws_image_prefix = null
    aws_queue = null
    disable_ping = false

    // nfcore
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    wf {
        example_cmd = [
            "--snv",
            "--sv",
            "--mod",
            "--sample_name 'MYSAMPLE'", 
            "--ref 'wf-somatic-variation-demo/GCA_000001405.15_GRCh38_no_alt_analysis_set_chr20.fna'",
            "--bed 'wf-somatic-variation-demo/demo.bed'",
            "--bam_normal 'wf-somatic-variation-demo/demo_normal.bam'",
            "--bam_tumor 'wf-somatic-variation-demo/demo_tumor.bam'",
            "--override_basecaller_cfg 'dna_r10.4.1_e8.2_400bps_sup@v3.5.2'",
            "--normal_min_coverage 0",
            "--tumor_min_coverage 0"
        ]
        container_sha = "sha18cc2ea1fae27fc772e7b728957996119c1ec81a"
        container_snp_sha = "sha86599ecdb46472d01e0b7c2704683f6aee8a82dd"
        container_snv_to_sha = "sha0bed006dfad374401e9410b44d67e6609f7936e9"
        container_sv_sha = "shac215e0f39f6c28148ce90b9ced11a4efda08c8c4"
        container_mod_sha = "shae137452eb41f5f12b790774cafe15bc97f48d4d0"
        common_sha = "shad399cf22079b5b153920ac39ee40095a677933f1"
        snpeff_tag = "sha313729d816872d70b410752001a0e2654eb88807"
        dss_sha = "sha28cc44cacad092f1b074aca3548ff8ba9b483fc0"
        agent = null
    }
}

manifest {
    name            = 'epi2me-labs/wf-somatic-variation'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-somatic-variation'
    description     = 'Somatic structural variants, methylation, short variants and short tandem repeat workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.3.1'
}

epi2melabs {
    tags = 'somatic variant'
    icon = 'faDisease'
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    container = "ontresearch/wf-somatic-variation:${params.wf.container_sha}"
    withLabel:wf_somatic_snv {
        container = "ontresearch/wf-somatic-snp:${params.wf.container_snp_sha}"
    }
    withLabel:wf_somatic_snv_to {
        container = "ontresearch/clairs-to:${params.wf.container_snv_to_sha}"
    }
    withLabel:wf_somatic_mod {
        container = "ontresearch/modkit:${params.wf.container_mod_sha}"
    }
    withLabel:dss {
        container = "ontresearch/dss:${params.wf.dss_sha}"
    }
    withLabel:wf_somatic_sv {
        container = "ontresearch/wf-somatic-sv:${params.wf.container_sv_sha}"
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }
    withLabel:snpeff_annotation {
        container = "ontresearch/snpeff:${params.wf.snpeff_tag}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            container = "${params.aws_image_prefix}-wf-somatic-variation:${params.wf.container_sha}"
            withLabel:wf_somatic_snv {
                container = "${params.aws_image_prefix}-wf-somatic-snp:${params.wf.container_snp_sha}"
            }
            withLabel:wf_somatic_snv_to {
                container = "${params.aws_image_prefix}-clairs-to:${params.wf.container_snv_to_sha}"
            }
            withLabel:wf_somatic_sv {
                container = "${params.aws_image_prefix}-wf-somatic-sv:${params.wf.container_sv_sha}"
            }
            withLabel:wf_somatic_methyl {
                container = "${params.aws_image_prefix}-modkit:${params.wf.container_mod_sha}"
            }
            withLabel:dss {
                container = "${params.aws_image_prefix}-dss:${params.wf.dss_sha}-root"
            }
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            withLabel:snpeff_annotation {
                container = "${params.aws_image_prefix}-snpeff:${params.wf.snpeff_tag}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
    // Java tend to send errors and warnings to STDOUT, messing the output.
    // This prevents that from happening
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
